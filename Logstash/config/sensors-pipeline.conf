input {
  rabbitmq {
	host => "localhost"
	port => 5672
	user => "guest"
	password => "guest"
	
	queue => "q_sensors"
	passive => true
	
	codec => "plain"
  }
}
filter {
	grok {
		match => { "message" => "%{SENSOR:sensor}\:%{GREEDYDATA:payload}" }
		pattern_definitions => {
			"SENSOR" => "\w{3}"
		}
	}
	
	if [sensor] == "GYR" {
		####### GYROSCOPE #######
		grok {
			match => { "payload" => "%{CUSTOMWORD}%{NUMBER:[gyroscope][x]}.%{CUSTOMWORD}%{NUMBER:[gyroscope][y]}.%{CUSTOMWORD}%{NUMBER:[gyroscope][z]}.%{CUSTOMWORD}%{NUMBER:[accelerometer][x]}.%{CUSTOMWORD}%{NUMBER:[accelerometer][y]}.%{CUSTOMWORD}%{NUMBER:[accelerometer][z]}"}
			pattern_definitions => {
				"CUSTOMWORD" => "\w+="
				"SENSOR" => "\w{3}"
			}
		}
		mutate {
			convert => {
				"[gyroscope][x]" => "integer"
				"[gyroscope][y]" => "integer"
				"[gyroscope][z]" => "integer"
				"[accelerometer][x]" => "integer"
				"[accelerometer][y]" => "integer"
				"[accelerometer][z]" => "integer"
			}
		}
	} else if [sensor] == "BRH" {
		####### BRIGHTNESS #######
		grok {
			match => { "payload" => "%{NUMBER:brightness}"}
		}
		mutate {
			convert => {
				"brightness" => "integer"
			}
		}
	} else if [sensor] == "GPS" {
		####### GPS #######
		grok {
			match => { "payload" => "%{CUSTOMGPS}%{NUMBER:[location][lat]}.%{CUSTOMGPS}%{NUMBER:[location][lon]}"}
			pattern_definitions => {
				"CUSTOMGPS" => "\w{3}\:\s*"
			}
		}
		mutate {
			convert => {
				"[location][lat]" => "float"
				"[location][lon]" => "float"
			}
		}
	} else if [sensor] == "LHL" {
		####### ELECTROMAGNETIC FIELD #######
		grok {
			match => { "payload" => "%{NUMBER:electromagnetic-field}"}
		}
		mutate {
			convert => {
				"electromagnetic-field" => "integer"
			}
		}
	} else if [sensor] == "MOT" {
		####### MOTION #######
		grok {
			match => { "payload" => "%{NUMBER:motion}"}
		}
		mutate {
			convert => {
				"motion" => "integer"
			}
		}
	} else if [sensor] == "MPH" {
		####### MICROPHONE #######
		grok {
			match => { "payload" => "%{NUMBER:microphone}"}
		}
		mutate {
			convert => {
				"microphone" => "integer"
			}
		}
	} else if [sensor] == "TEM" {
		####### TEMPERATURE AND HUMIDITY #######
		grok {
			match => { "message" => "%{NUMBER:temperature},%{NUMBER:humidity}"}
		}
		mutate {
			convert => {
				"temperature" => "float"
				"humidity" => "float"
			}
		}
	}
	
	mutate {
		remove_field => [
			"@version",
			"message",
			"payload"
		]
	}
}
output {
	stdout {
		codec => rubydebug
	}
	if [sensor] == "GYR" {
		####### GYROSCOPE #######
		file {
			path => "./sensors/gyroscope/gyroscope-%{+YYYY-MM-dd}.txt"
		}
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "wws-toaster-gyroscope"
		}
	} else if [sensor] == "BRH" {
		####### BRIGHTNESS #######
		file {
			path => "./sensors/brightness/brightness-%{+YYYY-MM-dd}.txt"
		}
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "wws-toaster-brightness"
		}
	} else if [sensor] == "GPS" {
		####### GPS #######
		file {
			path => "./sensors/gps/gps-%{+YYYY-MM-dd}.txt"
  		}
  		elasticsearch {
			hosts => ["localhost:9200"]
			index => "wws-toaster-gps"
  		}
	} else if [sensor] == "LHL" {
		####### ELECTROMAGNETIC FIELD #######
		file {
			path => "./sensors/electromagnetic-field/electromagnetic-field-%{+YYYY-MM-dd}.txt"
		}
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "wws-toaster-electromagnetic-field"
		}
	} else if [sensor] == "MOT" {
		####### MOTION #######
		file {
			path => "./sensors/motion/motion-%{+YYYY-MM-dd}.txt"
		}
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "wws-toaster-motion"
		}
	} else if [sensor] == "MPH" {
		####### MICROPHONE #######
		file {
			path => "./sensors/microphone/microphone-%{+YYYY-MM-dd}.txt"
		}
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "wws-toaster-microphone"
		}
	} else if [sensor] == "TEM" {
		####### TEMPERATURE AND HUMIDITY #######
		file {
			path => "./sensors/temp-humidity/temp-humidity-%{+YYYY-MM-dd}.txt"
		}
		elasticsearch {
			hosts => ["localhost:9200"]
			index => "wws-toaster-temp-humidity"
		}
	}
}